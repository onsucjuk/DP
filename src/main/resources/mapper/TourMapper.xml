<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- JAVA와 연결할 Mapper 파일 설정 -->
<mapper namespace="dp.fdis.persistance.mapper.ITourMapper">

    <!-- 여행 리스트 쿼리 -->
    <select id="getTourList" parameterType = "TourDTO" resultType="TourDTO">
        SELECT TOUR_SEQ, TOUR_NAME, TOUR_PROCESS
        FROM TOUR_INFO
        WHERE USER_ID = #{userId}
        ORDER BY TOUR_SEQ
    </select>

    <select id="getTourSeq" parameterType = "TourDTO" resultType="TourDTO">
        SELECT TOUR_SEQ, TOUR_NAME, TOUR_PROCESS
        FROM TOUR_INFO
        WHERE USER_ID = #{userId}
        AND
            TOUR_NAME = #{tourName}
    </select>

    <insert id="insertTourInfo" parameterType="TourDTO">
        INSERT INTO TOUR_INFO (
            TOUR_SEQ, TOUR_NAME, USER_ID, TOUR_PROCESS
                    )
        VALUES (
            COALESCE((SELECT MAX(A.TOUR_SEQ) FROM TOUR_INFO A), 0) + 1,
                #{tourName}, #{userId}, -1
               )
    </insert>

    <!-- 여행 번호 확인 -->
    <select id="tourSeqExists" parameterType="TourDTO" resultType="TourDTO">
        SELECT
        CASE
        WHEN COUNT(1) = 0 THEN 'N'
        ELSE 'Y'
        END AS EXISTS_YN
        FROM TOUR_INFO
        WHERE TOUR_SEQ = #{tourSeq}
        AND
        USER_ID = #{userId}
    </select>

    <!-- 여행 상세보기 쿼리 -->
    <select id="getTourInfo" parameterType="TourDTO" resultType="TourDTO">
        SELECT TOUR_SEQ, TOUR_NAME, TOUR_PROCESS, START_TIME, END_TIME, USER_ID
        FROM  TOUR_INFO
        WHERE
            USER_ID = #{userId}
            AND
            TOUR_SEQ = #{tourSeq}
    </select>

    <!-- 여행 이름 수정 쿼리 -->
    <update id="updateTourName" parameterType="TourDTO">
        UPDATE TOUR_INFO
        SET
            TOUR_NAME = #{tourName}
        WHERE
            TOUR_SEQ = #{tourSeq}
            AND
            USER_ID = #{userId}
    </update>

    <!-- 여행 시작일 수정 쿼리 -->
    <update id="updateTourStart" parameterType="TourDTO">
        UPDATE TOUR_INFO
        SET
            START_TIME = now()
        WHERE
            TOUR_SEQ = #{tourSeq}
            AND
            USER_ID = #{userId}
    </update>

    <update id="resetTourStart" parameterType="TourDTO">
        UPDATE TOUR_INFO
        SET
            START_TIME = null
        WHERE
            TOUR_SEQ = #{tourSeq}
          AND
            USER_ID = #{userId}
    </update>


    <!-- 여행 종료일 수정 쿼리 -->
    <update id="updateTourEnd" parameterType="TourDTO">
        UPDATE TOUR_INFO
        SET
            END_TIME = now(),
            TOUR_PROCESS = #{tourProcess}
        WHERE
            TOUR_SEQ = #{tourSeq}
            AND
            USER_ID = #{userId}
    </update>

    <!-- 여행 진척도 수정 쿼리 -->
    <update id="updateTourProcess" parameterType="TourDTO">
        UPDATE TOUR_INFO
        SET
            TOUR_PROCESS = #{tourProcess}
        WHERE
            TOUR_SEQ = #{tourSeq}
            AND
            USER_ID = #{userId}
    </update>



    <!-- 여행 정보 삭제 쿼리 -->
    <delete id="deleteTourInfo" parameterType="TourDTO">
        DELETE FROM TOUR_INFO
        WHERE
            TOUR_SEQ = #{tourSeq}
            AND
            USER_ID = #{userId}
    </delete>

    <select id="getTourNameExists" parameterType="TourDTO" resultType="TourDTO">
        <!-- SELECT DECODE(COUNT(1),0,'N','Y') AS EXISTS_YN -->
        SELECT
        CASE
        WHEN COUNT(1) = 0 THEN 'N'
        ELSE 'Y'
        END AS EXISTS_YN
        FROM TOUR_INFO
        WHERE TOUR_NAME = #{tourName}
              AND
              USER_ID = #{userId}
    </select>


    <!-- 여기서부터 Tour_day 매퍼 || 여행 일수, 진행도 가져오기-->

    <update id="updateTourDaySt" parameterType="TourDTO">
        UPDATE TOUR_DAY
        SET
            DAY_START = now()
        WHERE
            TOUR_SEQ = #{tourSeq}
          AND
            TOUR_DAY = #{tourDay}
    </update>

    <update id="resetTourDaySt" parameterType="TourDTO">
        UPDATE TOUR_DAY
        SET
            DAY_START = null
        WHERE
            TOUR_SEQ = #{tourSeq}
          AND
            TOUR_DAY = #{tourDay}
    </update>

    <insert id="addTourDay" parameterType="TourDTO">
        INSERT INTO TOUR_DAY (
            TOUR_SEQ, TOUR_DAY
        )
        VALUES (
                   #{tourSeq},
                   (SELECT COALESCE(MAX(A.TOUR_DAY), 0) FROM TOUR_DAY A WHERE A.TOUR_SEQ = #{tourSeq}) + 1
               )
    </insert>

    <!-- COALESCE((SELECT MAX(A.PLACE_SEQ) FROM TOUR_DAY A WHERE A.TOUR_DAY = #{tourDay}), 0) + 1 place 추가시 사용 -->

    <select id="getTourDayInfo" parameterType = "TourDTO" resultType="TourDTO">
        SELECT TOUR_SEQ, TOUR_DAY, DAY_START
        FROM TOUR_DAY
        WHERE TOUR_SEQ = #{tourSeq}
        AND   TOUR_DAY = #{tourDay}
    </select>

    <!-- 해당 Day에 맞는 정보 들고오기-->
    <select id="getTourDay" parameterType = "TourDTO" resultType="TourDTO">
        SELECT TOUR_SEQ, TOUR_DAY, DAY_START
        FROM TOUR_DAY
        WHERE TOUR_SEQ = #{tourSeq}
          AND   TOUR_DAY = #{tourDay}
    </select>

    <select id="getTourYn" parameterType = "TourDTO" resultType="TourDTO">
        SELECT TOUR_SEQ, TOUR_DAY, COUNT(CASE WHEN TOUR_YN = 'Y' THEN 1 ELSE NULL END) AS TOUR_Y, COUNT(CASE WHEN TOUR_YN = 'N' THEN 1 ELSE NULL END) AS TOUR_N
        FROM TOUR_PLACE
        WHERE TOUR_SEQ = #{tourSeq}
        GROUP BY TOUR_SEQ, TOUR_DAY
    </select>

    <!-- tourDayList -->

    <select id="getTourDayList" parameterType = "TourDTO" resultType="TourDTO">
        SELECT A.TOUR_SEQ AS TOUR_SEQ, A.TOUR_DAY AS TOUR_DAY, A.DAY_START AS DAY_START, COUNT(CASE WHEN B.TOUR_YN = 'Y' AND A.TOUR_DAY = B.TOUR_DAY THEN 1 ELSE NULL END) AS TOUR_Y, COUNT(CASE WHEN B.TOUR_YN = 'N' AND A.TOUR_DAY = B.TOUR_DAY THEN 1 ELSE NULL END) AS TOUR_N
        FROM TOUR_DAY A
        LEFT JOIN TOUR_PLACE B ON A.TOUR_SEQ = B.TOUR_SEQ AND A.TOUR_DAY = B.TOUR_DAY
        WHERE A.TOUR_SEQ = #{tourSeq}
        GROUP BY TOUR_SEQ, TOUR_DAY
        ORDER BY TOUR_DAY
    </select>

    <delete id="deleteTourDay" parameterType="TourDTO">
        DELETE FROM TOUR_DAY
        WHERE TOUR_SEQ = #{tourSeq}
        AND   TOUR_DAY = #{tourDay}
    </delete>

    <delete id="deleteTourDayAll" parameterType="TourDTO">
        DELETE FROM TOUR_DAY
        WHERE TOUR_SEQ = #{tourSeq}
    </delete>

    <!-- 여기서부터 Tour_Place 매퍼 || 여행 일수, 진행도 가져오기-->

    <!-- 여행 목적지 리스트 -->
    <select id="getTourPlace" parameterType="TourDTO" resultType="TourDTO">
        SELECT PLACE_SEQ, PLACE_NICK, PLACE_NAME, PLACE_ADDR, MEMO, LAT, LON, POI, END_TIME, START_TIME
        FROM  TOUR_PLACE
        WHERE
            TOUR_DAY = #{tourDay}
          AND
            TOUR_SEQ = #{tourSeq}
    </select>

    <!-- 여행 목적지 하나 들고 오기 -->
    <select id="getTourPlaceOne" parameterType="TourDTO" resultType="TourDTO">
        SELECT PLACE_NICK, PLACE_NAME, PLACE_ADDR, MEMO, LAT, LON, POI, END_TIME, START_TIME
        FROM  TOUR_PLACE
        WHERE
            TOUR_DAY = #{tourDay}
          AND
            TOUR_SEQ = #{tourSeq}
          AND
            PLACE_SEQ = #{placeSeq}
    </select>

    <insert id="insertTourPlace" parameterType="TourDTO">
        INSERT INTO TOUR_PLACE (
            TOUR_SEQ, TOUR_DAY, PLACE_SEQ, PLACE_NICK, PLACE_NAME, PLACE_ADDR, MEMO, LAT, LON, POI
        )
        VALUES (
                   #{tourSeq}, #{tourDay}, (SELECT COALESCE(MAX(A.PLACE_SEQ), 0) FROM TOUR_PLACE A WHERE A.TOUR_SEQ = #{tourSeq} AND A.TOUR_DAY = #{tourDay}) + 1,
                   #{placeNick},#{placeName},#{placeAddr}, #{memo}, #{lat}, #{lon}, #{poi}
               )
    </insert>

    <!-- 여행 진척도 수정 쿼리 -->
    <update id="updateTourPlace" parameterType="TourDTO">
        UPDATE TOUR_PLACE
        SET
            PLACE_NICK = #{placeNick},
            PLACE_NAME = #{placeName},
            PLACE_ADDR = #{placeAddr},
            MEMO = #{memo},
            LAT = #{lat},
            LON = #{lon},
            POI = #{poi}
        WHERE
            TOUR_SEQ = #{tourSeq}
          AND
            TOUR_DAY = #{tourDay}
          AND
            PLACE_SEQ = #{placeSeq}
    </update>

    <delete id="deleteTourPlace" parameterType="TourDTO">
        DELETE FROM TOUR_PLACE
        WHERE
            TOUR_SEQ = #{tourSeq}
    </delete>

    <delete id="deleteTourPlaceOne" parameterType="TourDTO">
        DELETE FROM TOUR_PLACE
        WHERE
            TOUR_SEQ = #{tourSeq}
          AND
            TOUR_DAY = #{tourDay}
          AND
            PLACE_SEQ = #{placeSeq}
    </delete>

</mapper>